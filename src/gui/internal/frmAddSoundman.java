/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package gui.internal;

import Validators.EmailValidator;
import Validators.PositiveValidator;
import entities.*;
import gui.main.iWindow;
import iRecord.Controller.ArtistManager;
import iRecord.Controller.FreelancerManager;
import iRecord.Validators.AgeValidator;
import iRecord.Validators.CharValidator;
import iRecord.iRecord;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author nisan
 */
public class frmAddSoundman extends javax.swing.JInternalFrame {
    private String flID;
    private String firstName, lastName, stageName;
    private String Email;
    private String password, picPath;
    private double fullPayment = -1, downPayment = -1;
    private Date birthDate;
    private boolean isProducer = false, isMixTech = false, isMasterTech = false;
    
    
    /**
     * Creates new form frmCreateSession
     */
    public frmAddSoundman() {
        setTitle("Add Artist Page");
        initComponents();
        
        init();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        pnlAdd = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        lblflID = new javax.swing.JLabel();
        lblStageName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblBDay = new javax.swing.JLabel();
        lblPass2 = new javax.swing.JLabel();
        lblMailError = new javax.swing.JLabel();
        tfStageName = new javax.swing.JTextField();
        tfEmail = new javax.swing.JTextField();
        lblPass4 = new javax.swing.JLabel();
        lblNameError = new javax.swing.JLabel();
        Pass1 = new javax.swing.JPasswordField();
        Pass2 = new javax.swing.JPasswordField();
        lblfirstNmae = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        lblFirstError1 = new javax.swing.JLabel();
        tfLastName = new javax.swing.JTextField();
        lblLastError2 = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblPass3 = new javax.swing.JLabel();
        cbProducer = new javax.swing.JCheckBox();
        cbMixTech = new javax.swing.JCheckBox();
        cbMasterTech = new javax.swing.JCheckBox();
        lblPass5 = new javax.swing.JLabel();
        lblPass6 = new javax.swing.JLabel();
        lblPass7 = new javax.swing.JLabel();
        lblpayError = new javax.swing.JLabel();
        tfdown = new javax.swing.JTextField();
        tffull = new javax.swing.JTextField();
        lbdateError = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        attachFile = new javax.swing.JButton();
        lblPath = new javax.swing.JLabel();
        lblGen = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();

        setBackground(new Color(0,0,0,0));
        getContentPane().setLayout(null);

        jLabel16.setBackground(new Color(0,0,0,0));
        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Add new Soundman window");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(10, 0, 360, 30);

        pnlAdd.setBackground(new Color(255,255,255,40));
        pnlAdd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblID.setForeground(new java.awt.Color(255, 255, 255));
        lblID.setText("Freelancer ID");
        pnlAdd.add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 170, -1));

        lblflID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblflID.setForeground(new java.awt.Color(255, 255, 255));
        lblflID.setText("Freelancer ID");
        pnlAdd.add(lblflID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, -1));

        lblStageName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblStageName.setForeground(new java.awt.Color(255, 255, 255));
        lblStageName.setText("Stage Name");
        pnlAdd.add(lblStageName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        lblEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("Email");
        pnlAdd.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        lblBDay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblBDay.setForeground(new java.awt.Color(255, 255, 255));
        lblBDay.setText("Birth Date");
        pnlAdd.add(lblBDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        lblPass2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPass2.setForeground(new java.awt.Color(255, 255, 255));
        lblPass2.setText("Retype Password");
        pnlAdd.add(lblPass2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        lblMailError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblMailError.setForeground(new java.awt.Color(255, 0, 51));
        pnlAdd.add(lblMailError, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 390, 20));

        tfStageName.setText("Enter stage name");
        tfStageName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfStageNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfStageNameFocusLost(evt);
            }
        });
        pnlAdd.add(tfStageName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 170, -1));

        tfEmail.setText("Enter Email");
        tfEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfEmailFocusLost(evt);
            }
        });
        pnlAdd.add(tfEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 170, -1));

        lblPass4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblPass4.setForeground(new java.awt.Color(255, 0, 51));
        pnlAdd.add(lblPass4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 400, 20));

        lblNameError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblNameError.setForeground(new java.awt.Color(255, 0, 51));
        pnlAdd.add(lblNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 390, 20));

        Pass1.setText("jPasswordField1");
        Pass1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Pass1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Pass1FocusLost(evt);
            }
        });
        pnlAdd.add(Pass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 170, -1));

        Pass2.setText("jPasswordField2");
        Pass2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Pass2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Pass2FocusLost(evt);
            }
        });
        pnlAdd.add(Pass2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 170, -1));

        lblfirstNmae.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblfirstNmae.setForeground(new java.awt.Color(255, 255, 255));
        lblfirstNmae.setText("First Name");
        pnlAdd.add(lblfirstNmae, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        tfFirstName.setText("Enter first name");
        tfFirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfFirstNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfFirstNameFocusLost(evt);
            }
        });
        pnlAdd.add(tfFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 170, -1));

        lblFirstError1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblFirstError1.setForeground(new java.awt.Color(255, 0, 51));
        pnlAdd.add(lblFirstError1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 390, 20));

        tfLastName.setText("Enter last name");
        tfLastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfLastNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfLastNameFocusLost(evt);
            }
        });
        pnlAdd.add(tfLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 170, -1));

        lblLastError2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblLastError2.setForeground(new java.awt.Color(255, 0, 51));
        pnlAdd.add(lblLastError2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 390, 20));

        lblLastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(255, 255, 255));
        lblLastName.setText("Last Name");
        pnlAdd.add(lblLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        lblPass3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPass3.setForeground(new java.awt.Color(255, 255, 255));
        lblPass3.setText("Down Payment");
        pnlAdd.add(lblPass3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        cbProducer.setBackground(new java.awt.Color(204, 0, 255));
        cbProducer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbProducer.setText("Producer");
        cbProducer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbProducerMouseClicked(evt);
            }
        });
        pnlAdd.add(cbProducer, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, -1, -1));

        cbMixTech.setBackground(new java.awt.Color(204, 0, 255));
        cbMixTech.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbMixTech.setText("MixTech");
        cbMixTech.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbMixTechMouseClicked(evt);
            }
        });
        pnlAdd.add(cbMixTech, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, -1, -1));

        cbMasterTech.setBackground(new java.awt.Color(204, 0, 255));
        cbMasterTech.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbMasterTech.setText("MaserTech");
        cbMasterTech.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbMasterTechMouseClicked(evt);
            }
        });
        pnlAdd.add(cbMasterTech, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, -1, -1));

        lblPass5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPass5.setForeground(new java.awt.Color(255, 255, 255));
        lblPass5.setText("Password");
        pnlAdd.add(lblPass5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        lblPass6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPass6.setForeground(new java.awt.Color(255, 255, 255));
        lblPass6.setText("Profession");
        pnlAdd.add(lblPass6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        lblPass7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPass7.setForeground(new java.awt.Color(255, 255, 255));
        lblPass7.setText("Full Payment");
        pnlAdd.add(lblPass7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        lblpayError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblpayError.setForeground(new java.awt.Color(255, 0, 51));
        pnlAdd.add(lblpayError, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, 400, 20));

        tfdown.setText("Enter down payment");
        tfdown.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfdownFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfdownFocusLost(evt);
            }
        });
        pnlAdd.add(tfdown, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, 170, -1));

        tffull.setText("Enter full payment");
        tffull.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tffullFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tffullFocusLost(evt);
            }
        });
        pnlAdd.add(tffull, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 170, -1));

        lbdateError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lbdateError.setForeground(new java.awt.Color(255, 0, 51));
        pnlAdd.add(lbdateError, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 400, 20));

        jXDatePicker1.setBackground(new Color(0,0,0,0));
        jXDatePicker1.setForeground(new java.awt.Color(204, 0, 153));
        jXDatePicker1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jXDatePicker1FocusLost(evt);
            }
        });
        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });
        pnlAdd.add(jXDatePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 170, 20));

        attachFile.setText("Attach File");
        attachFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attachFileMouseClicked(evt);
            }
        });
        pnlAdd.add(attachFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 170, -1));

        lblPath.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblPath.setForeground(new java.awt.Color(255, 51, 51));
        pnlAdd.add(lblPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 570, 20));

        getContentPane().add(pnlAdd);
        pnlAdd.setBounds(0, 40, 780, 390);

        lblGen.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lblGen.setForeground(new java.awt.Color(255, 0, 51));
        getContentPane().add(lblGen);
        lblGen.setBounds(10, 470, 380, 20);

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add Soundman");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(10, 440, 120, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void tfStageNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfStageNameFocusGained
        if (tfStageName.getText().equals("Enter stage name"))
            tfStageName.setText("");
    }//GEN-LAST:event_tfStageNameFocusGained
    
    private void tfEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEmailFocusGained
        if (tfEmail.getText().equals("Enter Email"))
            tfEmail.setText("");
    }//GEN-LAST:event_tfEmailFocusGained
    
    private void Pass1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Pass1FocusGained
        if (Pass1.getText().equals("jPasswordField1"))
            Pass1.setText("");
    }//GEN-LAST:event_Pass1FocusGained
    
    private void Pass2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Pass2FocusGained
        if (Pass2.getText().equals("jPasswordField2"))
            Pass2.setText("");
    }//GEN-LAST:event_Pass2FocusGained
        
    private void tfStageNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfStageNameFocusLost
        String sn = tfStageName.getText();
        if (sn.length() < 2){
            lblNameError.setText("Name is too short");
            stageName = null;
            updateWin();
            return;
        }
        if (!CharValidator.isWord(sn)){
            lblNameError.setText("Name must contain at least 3 valid letters");
            stageName = null;
            updateWin();
            return;
        }
        
        lblNameError.setText("");
        stageName = tfStageName.getText();
        updateWin();
    }//GEN-LAST:event_tfStageNameFocusLost
    
    private void tfEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEmailFocusLost
        String mail = tfEmail.getText();
        if (!EmailValidator.validateEmail(mail)){
            lblMailError.setText("Please enter valid email - username@domain.host");
            Email = null;
            updateWin();
            return;
        }
        
        Email = mail;
        lblMailError.setText("");
        updateWin();
        
    }//GEN-LAST:event_tfEmailFocusLost
    
    private void Pass2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Pass2FocusLost
        String pass1= Pass1.getText();
        String pass2 = Pass2.getText();
        if (pass1.length() < 4){
            lblPass4.setText("Password must contain at least 4 characters");
            password =null;
            updateWin();
            return;
        }
        
        if (!pass1.equals(pass2)){
            lblPass4.setText("Passwords does not match");
            password =null;
            updateWin();
            return;
        }
        
        lblPass4.setText("");
        password = pass2;
        updateWin();
        
    }//GEN-LAST:event_Pass2FocusLost
    
    private void Pass1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Pass1FocusLost
        String pass1= Pass1.getText();
        String pass2 = Pass2.getText();
        if (pass1.length() < 4){
            lblPass4.setText("Password must contain at least 4 characters");
            password =null;
            updateWin();
            return;
        }
        
        if (!pass1.equals(pass2)){
            if (Pass2.getText().equals("jPasswordField2"))
                lblPass4.setText("");
            else{
                lblPass4.setText("Passwords does not match");
            }
            password =null;
            updateWin();
            return;
        }
        
        updateWin();
        
    }//GEN-LAST:event_Pass1FocusLost
    
    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        if (!isMixTech && !isProducer && !isMasterTech){
            lblGen.setText("You must pick at least one profession for soundman");
            updateWin();
            return;
        }
        
        if(downPayment > fullPayment){
            lblpayError.setText("Down payment can't be greather than full payment");
            updateWin();
            return;
        }
        
        if (firstName == null || lastName == null || stageName == null || Email ==null
                || fullPayment < 0 || downPayment < 0 || birthDate == null  || password ==null || picPath == null ){
            lblGen.setText("One or more fields ane missing");
            updateWin();
            return;
        }
        
        else{
//            java.util.Date date = new java.util.Date();
//            java.sql.Date birthdate = new java.sql.Date(birthDate.getTime());
            Soundman toAdd = new Soundman(flID, firstName,lastName,stageName,isProducer,isMixTech,isMasterTech, downPayment,fullPayment,0 , birthDate, Email, password, 1); 
            toAdd.setPicPath(picPath);
            pnlAdd.setVisible(false);
            //System.out.println(ArtistManager.addArtist(toAdd));
            //TODO - FIX THIS IF 
            if (FreelancerManager.addSoundman(toAdd) > 0){
                lblGen.setForeground(Color.GREEN);
                lblGen.setText("Artist was added succefully");
                btnAdd.hide();
            }
            else{
                lblGen.setText("Something went wrong");
                btnAdd.hide();
            }

            updateWin();
            return;
        }
         
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void tfFirstNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfFirstNameFocusGained
        if (tfFirstName.getText().equals("Enter first name"))
            tfFirstName.setText("");
    }//GEN-LAST:event_tfFirstNameFocusGained

    private void tfFirstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfFirstNameFocusLost
        String sn = tfFirstName.getText();
        if (sn.length() < 3){
            lblFirstError1.setText("Name is too short");
            firstName = null;
            updateWin();
            return;
        }
        if (!CharValidator.isWord(sn)){
            lblFirstError1.setText("Name must contain at least 3 valid letters");
            firstName = null;
            updateWin();
            return;
        }
        
        lblFirstError1.setText("");
        firstName = sn;
        updateWin();
    }//GEN-LAST:event_tfFirstNameFocusLost

    private void tfLastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfLastNameFocusGained
        if(tfLastName.getText().equals("Enter last name"))
            tfLastName.setText("");
    }//GEN-LAST:event_tfLastNameFocusGained

    private void tfLastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfLastNameFocusLost
        String sn = tfLastName.getText();
        if (sn.length() < 3){
            lblLastError2.setText("Name is too short");
            lastName = null;
            updateWin();
            return;
        }
        if (!CharValidator.isWord(sn)){
            lblLastError2.setText("Name must contain at least 3 valid letters");
            lastName = null;
            updateWin();
            return;
        }
        
        lblLastError2.setText("");
        lastName = sn;
        updateWin();
    }//GEN-LAST:event_tfLastNameFocusLost

    private void tfdownFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdownFocusGained
        if (tfdown.getText().equals("Enter down payment"))
        tfdown.setText("");
    }//GEN-LAST:event_tfdownFocusGained

    private void tfdownFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfdownFocusLost

        if (!CharValidator.isNumber(tfdown.getText())){
            lblpayError.setText("Invalid number");
            downPayment = -1;
            updateWin();
            return;
        }

        double cost = PositiveValidator.stringToNum(tfdown.getText());
        if (cost < 0 || cost > 10000){
            lblpayError.setText("cost should be between 0-10000");
            downPayment = -1;
            updateWin();
            return;
        }
        
        if (cost > fullPayment){
            lblpayError.setText("Down payment can't be greather than full payment");
            downPayment = cost;
            updateWin();
            return;
        }
        
        lblpayError.setText("");
        downPayment = cost;
        updateWin();
    }//GEN-LAST:event_tfdownFocusLost

    private void tffullFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tffullFocusGained
        if (tffull.getText().equals("Enter full payment"))
            tffull.setText("");
    }//GEN-LAST:event_tffullFocusGained

    private void tffullFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tffullFocusLost
        
        if (!CharValidator.isNumber(tffull.getText())){
            lblpayError.setText("Invalid number");
            fullPayment = -1;
            updateWin();
            return;
        }

        double cost = PositiveValidator.stringToNum(tffull.getText());
        if (cost < 0 || cost > 10000){
            lblpayError.setText("cost should be between 0-10000");
            fullPayment = -1;
            updateWin();
            return;
        }
        
        fullPayment = cost;
        if (downPayment > fullPayment){
            lblpayError.setText("Down payment can't be greather than full payment");
            updateWin();
            return;
        }
        
        lblpayError.setText("");
        updateWin();
    }//GEN-LAST:event_tffullFocusLost

    private void cbProducerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbProducerMouseClicked
        if (cbProducer.isSelected()) isProducer = true;
        else isProducer = false;
        updateWin();
    }//GEN-LAST:event_cbProducerMouseClicked

    private void cbMixTechMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbMixTechMouseClicked
        if (cbMixTech.isSelected()) isMixTech = true;
        else isMixTech = false;
        updateWin();
    }//GEN-LAST:event_cbMixTechMouseClicked

    private void cbMasterTechMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbMasterTechMouseClicked
        if (cbMasterTech.isSelected()) isMasterTech = true;
        else isMasterTech = false;
        updateWin();
    }//GEN-LAST:event_cbMasterTechMouseClicked

    private void jXDatePicker1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jXDatePicker1FocusLost

    }//GEN-LAST:event_jXDatePicker1FocusLost

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed

        Date picked = jXDatePicker1.getDate();
        if (!AgeValidator.ValidateAge(picked, 12)){
            lbdateError.setText("Can't add people under 12 years old or future dates");
            birthDate = null;
            updateWin();
            return;
        }

        lbdateError.setText("");
        birthDate = picked;
        updateWin();
        return;
    }//GEN-LAST:event_jXDatePicker1ActionPerformed

    private void attachFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attachFileMouseClicked

        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        try {
            long size = Files.size(f.toPath()) / 1000;
            if(size>5120){
                //errFile.setIcon(xIcon.getIcon());
                lblPath.setText("File size can't be larger than 5MB");
                iWindow.update();
                return;
            }
            iRecord.log("Attempting to upload file size: "+(Files.size(f.toPath())) / 1000+"KB" );

        } catch (IOException ex) {
            Logger.getLogger(frmAddRecording.class.getName()).log(Level.SEVERE, null, ex);
        }
        String path = f.getAbsolutePath();
        lblPath.setText(path);

        String extension = "";

        int i = path.lastIndexOf('.');
        int p = Math.max(path.lastIndexOf('/'), path.lastIndexOf('\\'));

        if (i > p) {
            extension = path.substring(i+1);
        }

        if(!extension.contains("png") && !extension.contains("jpg") && !extension.contains("gif") && !extension.contains("bmp") && !extension.contains("jpeg")){
            //errFile.setIcon(xIcon.getIcon());
            lblPath.setText("Up to 5MB picture file only");
            iWindow.update();
            return;
        }

        //Try creating the file
        File uploads = new File("src/sources/pics");
        iRecord.log("Upload dir: "+uploads.getAbsolutePath());
        File tmp = new File(uploads, flID+"."+extension);
        iRecord.log("Tmp file: "+tmp.getAbsolutePath());

        try {
            Files.copy(f.toPath(), tmp.toPath(), REPLACE_EXISTING);
            //errFile.setIcon(vIcon.getIcon());
            lblPath.setForeground(Color.GREEN);
            lblPath.setText("File was successfully saved");
        } catch (IOException ex) {
            Logger.getLogger(frmAddRecording.class.getName()).log(Level.SEVERE, null, ex);
            //errFile.setIcon(xIcon.getIcon());
            lblPath.setForeground(Color.red);
            lblPath.setText("Failed to save file.");
        }
        iRecord.log("Finished uploading. Short path: "+tmp.toPath());
        String shortIconPath = tmp.toPath().toString().replace("\\", "/").replace("/src", "");
            shortIconPath = shortIconPath.substring(1);
            iRecord.log("Short Icon Path: "+shortIconPath);
            //        this.iconPath = shortIconPath;
            //        try{
                //        imgDisplay.setIcon(new javax.swing.ImageIcon(getClass().getResource(shortIconPath))); // NOI18N
                //        } catch(Exception e){
                //            imgDisplay.setVisible(false);
                //        }
            picPath = tmp.getAbsolutePath();
            iWindow.update();
    }//GEN-LAST:event_attachFileMouseClicked
    
    private void init(){
        createFLID();
    }
    
    /**
     * this method generates random id for artist
     * the generated id is checked by the controller before it's set
     */
    private void createFLID(){
        Random rand = new Random();
        int num = 0;
        String tempID = null;
        while (true){
            num = rand.nextInt(9999);
            if (num > 1000){
                tempID = "FL"+num;
                
                if (!ArtistManager.isExists(tempID)){
                    flID = tempID;
                    lblID.setText(tempID);
                    updateWin();
                    return;
                }
            }
        }

    }
    
    public void updateWin(){
        
        iWindow.update();
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Pass1;
    private javax.swing.JPasswordField Pass2;
    private javax.swing.JButton attachFile;
    private javax.swing.JButton btnAdd;
    private javax.swing.JCheckBox cbMasterTech;
    private javax.swing.JCheckBox cbMixTech;
    private javax.swing.JCheckBox cbProducer;
    private javax.swing.JLabel jLabel16;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JLabel lbdateError;
    private javax.swing.JLabel lblBDay;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstError1;
    private javax.swing.JLabel lblGen;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblLastError2;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblMailError;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JLabel lblPass2;
    private javax.swing.JLabel lblPass3;
    private javax.swing.JLabel lblPass4;
    private javax.swing.JLabel lblPass5;
    private javax.swing.JLabel lblPass6;
    private javax.swing.JLabel lblPass7;
    private javax.swing.JLabel lblPath;
    private javax.swing.JLabel lblStageName;
    private javax.swing.JLabel lblfirstNmae;
    private javax.swing.JLabel lblflID;
    private javax.swing.JLabel lblpayError;
    private javax.swing.JPanel pnlAdd;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfStageName;
    private javax.swing.JTextField tfdown;
    private javax.swing.JTextField tffull;
    // End of variables declaration//GEN-END:variables
}
